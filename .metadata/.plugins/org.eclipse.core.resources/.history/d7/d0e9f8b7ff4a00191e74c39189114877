package anshu.goes.crazy.on.graphs;

import java.util.LinkedList;

public class Graph {
	
	private int v;
	
	private LinkedList<Integer>[] adjacencyList;
	
	
    Graph(int v){
    	this.v =v;
    	adjacencyList = new LinkedList[v];
    	for(int i =0; i< v; i++) {
    		adjacencyList[i] = new LinkedList<Integer>();
    	}
    }
    
    public void addDirectedEdge(int v, int w) {
    	adjacencyList[v].add(w);
    }
    
    public void addUnDirectedEdge(int v, int w) {
    	adjacencyList[v].add(w);
    	adjacencyList[w].add(v);
    }
    
    public void bfsTraverse() {
    	for(LinkedList<Integer> connectedVertices : adjacencyList) {
    		for(int vertex : connectedVertices) {
    			System.out.println(vertex);
    		}
    	}
    }
    
    public static void main(String[] args) {
    	 Graph g = new Graph(4); 
    	  
         g.addDirectedEdge(0, 1); 
         g.addDirectedEdge(0, 2); 
         g.addDirectedEdge(1, 2); 
         g.addDirectedEdge(2, 0); 
         g.addDirectedEdge(2, 3); 
         g.addDirectedEdge(3, 3); 
   
         System.out.println("Following is Breadth First Traversal "+ 
                            "(starting from vertex 2)"); 
   
         g.bfsTraverse(); 
	}
}
